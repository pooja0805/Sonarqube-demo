arch: ppc64le
dist: jammy
os: linux
language: shell

before_install:
  - sudo apt-get update -q
  - sudo apt-get install -y wget git unzip tar net-tools xz-utils curl gzip patch locales make gcc g++ openjdk-17-jdk
  - export HOME_DIR=$(pwd)
  
install:
  # Install SonarQube
  - cd $HOME_DIR
  - wget -q https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.6.0.92116.zip
  - unzip -q sonarqube-10.6.0.92116.zip

before_script:
  # Set up Java
  - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-ppc64el
  - export PATH=$JAVA_HOME/bin:$PATH
  - java -version
  # Set up locales
  - sudo locale-gen en_US.UTF-8

script:
  # Start SonarQube
  - sudo groupadd sonarqube
  - sudo usermod -aG sonarqube $(whoami)
  - sudo chown $(whoami):sonarqube -R $HOME_DIR/sonarqube-10.6.0.92116
  - export PATH=$PATH:$HOME_DIR/sonarqube-10.6.0.92116/bin/linux-x86-64
  - sonar.sh start && sleep 120s
  # Install sonar-scanner-cli
  - cd $HOME_DIR
  - wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
  - unzip -q sonar-scanner-cli-5.0.1.3006-linux.zip
  # Modify sonar-scanner to use system JVM
  - sed -i 's/use_embedded_jre=true/use_embedded_jre=false/g' $HOME_DIR/sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner
  # Install Go
  - cd $HOME_DIR
  - wget -q https://go.dev/dl/go1.22.3.linux-ppc64le.tar.gz && tar -xzf go1.22.3.linux-ppc64le.tar.gz && export PATH=$HOME_DIR/go/bin:$PATH && go version
  # Install Node.js
  - cd $HOME_DIR
  - NODE_VERSION=20.12.2 && wget -q https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-ppc64le.tar.gz && tar -xzf node-v$NODE_VERSION-linux-ppc64le.tar.gz && export PATH=$HOME_DIR/node-v$NODE_VERSION-linux-ppc64le/bin:$PATH && node -v
  # Run sonar-scanner
  - $HOME_DIR/sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner -Dsonar.projectKey=gosec -Dsonar.sources=. -Dsonar.login=$SONAR_USERNAME -Dsonar.password=$SONAR_PASSWORD -Dsonar.kubernetes.activate=false
  - TOKEN=$(curl -X POST -H "Content-Type: application/x-www-form-urlencoded" -d "name=user-token" -u $SONAR_USERNAME:$SONAR_PASSWORD localhost:9000/api/user_tokens/generate | grep -o '"token":"[^"]*"' | sed 's/"token":"\([^"]*\)"/\1/') && echo $TOKEN
  - ceTaskUrl=$(grep 'ceTaskUrl=' .scannerwork/report-task.txt | sed 's/ceTaskUrl=//')
  - analysisIDToken=$(curl -u "$TOKEN": -X GET "$ceTaskUrl" | grep -o '"analysisId":"[^"]*"' | awk -F'"' '{print $4}')
  - curl -u $TOKEN: -X GET http://localhost:9000/api/issues/search?analysisId="$analysisIDToken" > sonar_report.json
  - cat sonar_report.json
